name: Docker Image Build

on:
  workflow_dispatch:
  push:
    branches:
      - "master"
    paths-ignore:
      - "**/README.md"
      - "**/LICENSE"
      - "**/docker-compose.yml.example"
      - "**/config.yml.example"
      - "**/.dockerignore"
      - "**/.gitignore"
  schedule:
    # 每天凌晨2点运行，保持缓存热度
    - cron: '0 2 * * *'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host
            image=moby/buildkit:buildx-stable-1
          config-inline: |
            [worker.oci]
              max-parallelism = 4
            [registry."ghcr.io"]
              mirrors = ["ghcr.io"]
              http = false
              insecure = false

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=py${{ matrix.python-version }}
            type=raw,value=latest,enable={{is_default_branch}},suffix=-py${{ matrix.python-version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfiles/py${{ matrix.python-version }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=gha,scope=py${{ matrix.python-version }}
            type=registry,ref=${{ env.REGISTRY }}/${{ steps.meta.outputs.tags | split(',') | first | split(':') | first }}:cache-py${{ matrix.python-version }}
          cache-to: |
            type=gha,mode=max,scope=py${{ matrix.python-version }}
            type=registry,ref=${{ env.REGISTRY }}/${{ steps.meta.outputs.tags | split(',') | first | split(':') | first }}:cache-py${{ matrix.python-version }},mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          provenance: false
          sbom: false
